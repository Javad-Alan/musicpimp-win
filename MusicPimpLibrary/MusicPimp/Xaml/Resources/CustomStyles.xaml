<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ms-appx:///MusicPimpLibrary/MusicPimp/Xaml/Resources/OldStyles.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<x:String x:Key="AppName">MusicPimp</x:String>

	<SolidColorBrush x:Key="AppColor" Color="DarkMagenta"/>
	<SolidColorBrush x:Key="AppBackgroundBrush" Color="Black"/>
	<SolidColorBrush x:Key="LightApplicationForegroundThemeBrush" Color="#DE000000"/>
	<SolidColorBrush x:Key="ListViewItemPlaceholderBackgroundThemeBrush" Color="Black"/>
	<SolidColorBrush x:Key="DarkApplicationSecondaryForegroundThemeBrush" Color="#99FFFFFF"/>
	<SolidColorBrush x:Key="DarkApplicationForegroundThemeBrush" Color="#DEFFFFFF"/>

	<DataTemplate x:Key="EndpointItemTemplate">
		<Grid Height="110" Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
				<TextBlock Text="{Binding Server}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Port}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Username}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<Style x:Key="PimpLayoutRootStyle" 
		   TargetType="Panel" 
		   BasedOn="{StaticResource LayoutRootStyle}">
		<Setter Property="Background" 
				Value="{StaticResource AppBackgroundBrush}"/>
	</Style>
	<Style x:Key="PimpLayoutRootStyle2" 
		   TargetType="Panel" 
		   BasedOn="{StaticResource LayoutRootStyle2}">
	</Style>

	<DataTemplate x:Key="MyStandard500x130ItemTemplate">
		<Grid Height="110" Width="480" Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="Transparent" Width="110" Height="110">
				<Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
			</Border>
			<StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
				<TextBlock Text="{Binding Title}" 
						   Style="{StaticResource HeaderTextStyle}" 
						   TextWrapping="NoWrap"
						   FontSize="32"/>
				<TextBlock Text="{Binding Subtitle}" 
						   Style="{StaticResource SubheaderTextStyle}" 
						   TextWrapping="NoWrap"
						   FontSize="24"/>
			</StackPanel>
		</Grid>
	</DataTemplate>
	
	<Style x:Key="VolumeAppBarButtonNoTextStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="VolumeAppBarButton"/>
		<Setter Property="Content" Value="&#xE15D;"/>
	</Style>

	<Style x:Key="MuteAppBarButtonNoTextStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="MuteAppBarButton"/>
		<Setter Property="Content" Value="&#xE198;"/>
	</Style>

	<DataTemplate x:Key="DarkSmallIcon200x70ItemTemplate">
		<Grid Width="194" Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<!--ListViewItemPlaceholderBackgroundThemeBrush-->
			<Border Background="{StaticResource AppColor}" 
					Margin="0,0,0,10" 
					Width="40" 
					Height="40">
				<Image Source="{Binding Image}" 
					   Stretch="UniformToFill"/>
			</Border>
			<!--Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"-->
			<StackPanel Grid.Column="1" Margin="10,-10,0,0">
				<TextBlock Text="{Binding Title}" 
						   Style="{StaticResource BodyTextStyle}" 
						   Foreground="{StaticResource DarkApplicationForegroundThemeBrush}"
						   TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Subtitle}" 
						   Style="{StaticResource BodyTextStyle}" 
						   Foreground="{StaticResource DarkApplicationSecondaryForegroundThemeBrush}"
						   TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Description}" 
						   Style="{StaticResource BodyTextStyle}" 
						   Foreground="{StaticResource DarkApplicationSecondaryForegroundThemeBrush}"
						   TextWrapping="NoWrap"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<Style x:Key="SubtleTextBlockStyle" 
		   TargetType="TextBlock" 
		   BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" 
				Value="48"/>
		<Setter Property="Foreground" 
				Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
	</Style>
	
	<Style x:Key="LargeHyperlinkButtonStyle" TargetType="HyperlinkButton">
		<Setter Property="FontSize" Value="48"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" 
											Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" 
												Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" 
											Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" 
												Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" 
											Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" 
												Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" 
											Storyboard.TargetName="FocusVisualWhite" 
											Storyboard.TargetProperty="Opacity"/>
										<DoubleAnimation Duration="0" To="1" 
											Storyboard.TargetName="FocusVisualBlack" 
											Storyboard.TargetProperty="Opacity"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" 
											Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" 
												Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="Text" Content="{TemplateBinding Content}" />
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LicenseAppBarButtonStyle" 
		   TargetType="ButtonBase" 
		   BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="ShopAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="License"/>
		<Setter Property="Content" Value="&#xE14D;"/>
	</Style>
	<Style x:Key="ShopAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="ShopAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Shop"/>
		<Setter Property="Content" Value="&#xE14D;"/>
	</Style>

	<Style x:Key="ToPlaylistAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="AddAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Add to Playlist"/>
		<Setter Property="Content" Value="&#xE109;"/>
	</Style>

	<Style x:Key="PlaySelectedAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PlayAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Play Selected"/>
		<Setter Property="Content" Value="&#xE102;"/>
	</Style>

	<Style x:Key="LightBasicTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource LightApplicationForegroundThemeBrush}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="TextTrimming" Value="WordEllipsis"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Typography.StylisticSet20" Value="True"/>
		<Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
		<Setter Property="Typography.CaseSensitiveForms" Value="True"/>
	</Style>

	<Style x:Key="LightBaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource LightBasicTextStyle}">
		<Setter Property="LineHeight" Value="20"/>
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
		<!-- Properly align text along its baseline -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="4"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="LightItemTextStyle" TargetType="TextBlock" BasedOn="{StaticResource LightBaselineTextStyle}"/>

	<Style x:Key="LightSubtitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource LightBaselineTextStyle}">
		<Setter Property="FontWeight" Value="Normal"/>
	</Style>



</ResourceDictionary>
